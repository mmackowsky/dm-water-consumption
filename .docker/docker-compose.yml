services:
  app-dm-water-consumption:
    networks:
      - dm-water-consumption
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    command: bash -c "poetry run python src/main.py"
    container_name: dm-water-consumption
    volumes:
      - .:/dm-water-consumption
    env_file:
      - /.env
    environment:
      - DATABASE_URL=${SQLALCHEMY_DATABASE_URL}
    ports:
      - "8400:8400"
    depends_on:
      db-dm-water-consumption:
        condition: service_healthy

  app-celery:
    networks:
      - dm-water-consumption
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    command: bash -c "cd src && poetry run celery -A worker worker --loglevel=INFO --without-gossip --without-mingle --without-heartbeat -Ofair --pool=solo"
    container_name: dm-water-consumption_celery_worker
    volumes:
      - .:/dm-water-consumption
    environment:
      CELERY_BROKER_URL: "redis://dm-water-consumption_redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://dm-water-consumption_redis:6379/0"
    depends_on:
      - redis
    healthcheck:
      test: celery inspect ping
      interval: 1m
      timeout: 10s
      retries: 10

  redis:
    networks:
      - dm-water-consumption
    image: "redis:latest"
    container_name: dm-water-consumption_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1m
      timeout: 10s
      retries: 10

  db-dm-water-consumption:
    networks:
      - dm-water-consumption
    container_name: db-water-consumption
    image: postgres:15
    volumes:
      - ./data/db-dm-water-consumption:/var/lib/postgresql/data
    env_file:
      - /.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      timeout: 30s
      retries: 6

networks:
  dm-water-consumption:
